Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Environment:
    Type: String
  DdexSequencerAddress:
    Type: String
  AutoPublishAlias:
    Type: String
  StorachaBridgeDBName:
    Type: String
  DbHost:
    Type: AWS::SSM::Parameter::Value<String>
  DbSecret:
    Type: AWS::SSM::Parameter::Value<String>
  RootDbName:
    Type: AWS::SSM::Parameter::Value<String>

Globals:
  Function:
    Runtime: "nodejs22.x"
    Timeout: 240
    MemorySize: 512
    Environment:
      Variables:
        TEMP_PATH: /tmp
        ENVIRONMENT: !Ref Environment
        SECRETS_PATH: !Sub ${Environment}/StorachaBridge
        DDEX_SEQUENCER_ADDRESS: !Ref DdexSequencerAddress
        NO_COLOR: true
        DB_HOST: !Ref DbHost
        DB_PORT: "5432"
        DB_USER: !Join
          - ""
          - - "{{resolve:secretsmanager:"
            - !Ref DbSecret
            - ":SecretString:username}}"
        DB_PASSWORD: !Join
          - ""
          - - "{{resolve:secretsmanager:"
            - !Ref DbSecret
            - ":SecretString:password}}"
        DB_SYNCRONIZE: "false"
        DB_DATABASE: !Ref StorachaBridgeDBName

Resources:
  StorachaBridgeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - "*"
              - Action:
                  - codedeploy:*
                Effect: Allow
                Resource:
                  - "*"

  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: StorachaBridge
      StageName: !Ref Environment
      BinaryMediaTypes:
        - multipart/form-data
        - application/zip
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"

  NestJsApp:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      CodeUri: ./storacha-bridge.zip
      Handler: out/storacha-bridge/lambdaEntrypoint.app
      MemorySize: 512
      AutoPublishAlias: !Ref AutoPublishAlias
      # ReservedConcurrentExecutions: 1
      DeploymentPreference:
        Type: AllAtOnce
        Hooks:
          PreTraffic: !Ref RunMigrations
      Events:
        NestJs:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /{whatever+}
            Method: ANY
      Role: !GetAtt StorachaBridgeRole.Arn

  RunMigrations:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "CodeDeployHook_StorachaBridge-${Environment}-RunMigrations"
      CodeUri: ./storacha-bridge.zip
      Handler: out/storacha-bridge/lambdaEntrypoint.runMigrations
      Environment:
        Variables:
          ROOT_DB_NAME: !Ref RootDbName
          SETTINGS_DEF_MODE: !Ref Environment
      DeploymentPreference:
        Enabled: false
      Role: !GetAtt StorachaBridgeRole.Arn

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"